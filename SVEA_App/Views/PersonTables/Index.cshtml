@model IEnumerable<SVEA_App.Models.PersonTable>

@{
    ViewBag.Title = "Persons Table Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table" id="TableP">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.PersonId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Birthdate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DepartmentTable.DepartmentName)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PersonId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Birthdate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DepartmentTable.DepartmentName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.PersonId }) |
                @Html.ActionLink("Details", "Details", new { id = item.PersonId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.PersonId })
            </td>
        </tr>
    }
</table>

<button id="processButton" type="button">Process</button>

@{
    ViewBag.Title = "Persons Table Index";
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<script type="text/javascript">
    function ProcesNextPersonAfterDelay() {
        let personsTable = document.getElementById('TableP')
        let personCount = '@Model.Count()';
        for (let currentPersonId = 1; currentPersonId <= personCount; currentPersonId++) {
            (function (n) {
                setTimeout(function () {
                    ProcessNextPerson(n, personCount, personsTable);
                    ClearLastPerson(n, personsTable);
                }, 5000 * n);
            })(currentPersonId);
        }
    }
    function ProcessNextPerson(currentPersonId, personCount, personsTable) {
        console.log("ProcessNextPerson " + currentPersonId);
        if (currentPersonId > personCount) {
            return;
        }
        let person = personsTable.getElementsByTagName('tr')[currentPersonId];
        person.bgColor = '#ff6f5e';
    }
    function ClearLastPerson(currentPersonId, personsTable) {
        console.log("ClearLastPerson currentPersonId" + currentPersonId);
        if (currentPersonId <= 1) {
            return;
        }
        let lastPersonId = currentPersonId - 1;
        console.log("ClearLastPerson lastPersonId" + lastPersonId);
        let person = personsTable.getElementsByTagName('tr')[lastPersonId];
        person.bgColor = '#ffffff';
    }
    $(function() {
        $('#processButton').on('click', ProcesNextPersonAfterDelay);
    });
</script>

